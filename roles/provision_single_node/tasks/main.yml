
- name: Find AMI
  ec2_ami_find:
    owner: self
    ami_tags:
      Name: "{{ ami_name }}"
    region: "{{region}}"
  register: "ami_find"
  
- name: Provision single node instance
  ec2:
    instance_type: "{{ infra_instance_type }}"
    image:  "{{ami_find['images'][0]['image_id']}}"
    region: "{{ region }}"
    spot_price: "{{ infra_node_spot_price }}"
    spot_wait_timeout: 300
    wait: true
    key_name: "{{ key_name }}"
    vpc_subnet_id: "{{ subnet_facts['subnet']['id'] }}"
    group: ['{{namespace}}_public_ingress', '{{namespace}}_public_egress', '{{namespace}}_ssh']
    volumes:
      - device_name: "{{ami_find['images'][0]['root_device_name']}}" 
        volume_size: "{{root_volume_size}}"
        volume_type: gp2        
        delete_on_termination: true
      - device_name: "/dev/xvdb"
        volume_size: "{{docker_volume_size}}"
        volume_type: gp2        
        delete_on_termination: true
    count_tag:
      Name: "node_{{ namespace }}"
    instance_tags:
      Name: "node_{{ namespace }}"
      namespace: "{{ namespace }}"
      role: "node"
      group: "admin"
    exact_count: 1
    assign_public_ip: yes
  register: ec2_node

- name: Register VM facts
  set_fact:
    node_private_ip: "{{ ec2_node['tagged_instances'][0]['private_ip'] }}"
    node_public_ip: "{{ ec2_node['tagged_instances'][0]['public_ip'] }}"

- name: Add node to created_instances group
  add_host:
    name={{ item.ip }}
    groups=created_instances
    instance_name={{ item.name }}
  with_items:
    - { name: 'node', ip: '{{node_public_ip}}' }

- name: Add public A record
  route53:
    zone: "{{public_dns_zone}}"
    record: "node.{{ namespace }}.{{ public_dns_zone }}"
    type: A
    ttl: 300
    value: "{{ node_public_ip }}"
    wait: yes
    command: "create"
    overwrite: yes

- name: Add public wildcard A record, mapped to the node (e.g. *.apps.ocp.example.com)
  route53:
    zone: "{{public_dns_zone}}"
    record: "*.{{public_subdomain_prefix}}.{{namespace}}.{{public_dns_zone}}"
    type: A
    ttl: 300
    value: "{{ node_public_ip }}"
    command: "create"
    overwrite: yes
    wait: yes

- name: Wait for SSH to come up
  wait_for:
    host: '{{ item }}'
    port: 22
    delay: 60
    timeout: 300
    state: started
  with_items:
    - "{{ node_public_ip }}"