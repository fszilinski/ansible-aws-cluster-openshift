
- name: Effective number of infra nodes
  set_fact:
   num_of_infra_nodes: "{{ infra_nodes + 1 }}"

- name: Provision infra nodes
  ec2:
    instance_type: "{{infra_instance_type}}"
    image:  "{{ami_find['results'][0]['ami_id']}}"
    region: "{{region}}"
    spot_price: "{{ infra_node_spot_price }}"
    spot_wait_timeout: 300
    wait: true
    key_name: "{{key_name}}"
    vpc_subnet_id: "{{subnet_facts['subnet']['id']}}"
    group: ['{{namespace}}_vpc', '{{namespace}}_public_ingress', '{{namespace}}_public_egress', '{{namespace}}_ssh']
    volumes:
      - device_name: "{{ami_find['results'][0]['root_device_name']}}" 
        volume_size: "{{root_volume_size}}"
        volume_type: gp2        
        delete_on_termination: true
      - device_name: "/dev/xvdb"
        volume_size: "{{docker_volume_size}}"
        volume_type: gp2        
        delete_on_termination: true
    count_tag:
      Name: "infra{{item}}_{{namespace}}"
    instance_tags:
      "{'Name':'infra{{item}}_{{namespace}}','namespace':'{{namespace}}','kubernetes.io/cluster/{{namespace}}':'{{namespace}}','role':'{{namespace}}_infra'}"
    exact_count: 1
    assign_public_ip: yes
  with_sequence: start=1 end={{num_of_infra_nodes|int}}
  register: ec2_infras

- name: Register infra node facts
  set_fact:
    all_infra_nodes: "{{ all_infra_nodes|default([]) + [ {'index': item.item, 'cn': 'infra' + item.item, 'public_ip': item.tagged_instances[0].public_ip, 'private_ip': item.tagged_instances[0].private_ip, 'public_dns_name': item.tagged_instances[0].public_dns_name, 'private_dns_name': item.tagged_instances[0].private_dns_name} ] }}"
  with_items: "{{ ec2_infras.results }}"